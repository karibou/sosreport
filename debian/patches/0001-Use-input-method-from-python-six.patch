From e19884c7d5f945a800f2d457b20084181614e5c3 Mon Sep 17 00:00:00 2001
From: Louis Bouchard <louis.bouchard@canonical.com>
Date: Wed, 27 Aug 2014 15:00:55 +0200
Subject: Use input method from python six

 Something our unittests didnt catch which is more functional
 than anything. Using raw_input fails on python3 because it was
 renamed to input. Six provides an alias that handles both
 cases.

Author: Adam Stokes <adam.stokes@ubuntu.com>
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1302808
Origin: upstream, https://github.com/sosreport/sos/commit/65d8fb5d30682dffffab1daf06662dafb9e303f2.patch
---
 sos/plugins/emc.py       | 5 ++++-
 sos/policies/__init__.py | 7 ++++---
 sos/sosreport.py         | 4 ++--
 3 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/sos/plugins/emc.py b/sos/plugins/emc.py
index 6eac7d0..80d0177 100644
--- a/sos/plugins/emc.py
+++ b/sos/plugins/emc.py
@@ -18,6 +18,9 @@
 
 from sos.plugins import Plugin, RedHatPlugin, os
 
+# Just for completeness sake.
+from six.moves import input
+
 class Emc(Plugin, RedHatPlugin):
     """EMC related information (PowerPath, Solutions Enabler CLI and Navisphere CLI)
     """
@@ -194,7 +197,7 @@ class Emc(Plugin, RedHatPlugin):
             CLARiiON_IP_address_list = []
             CLARiiON_IP_loop = "stay_in"
             while CLARiiON_IP_loop == "stay_in":
-                ans = raw_input("CLARiiON SP IP Address or [Enter] to exit: ")
+                ans = input("CLARiiON SP IP Address or [Enter] to exit: ")
                 ## Check to make sure the CLARiiON SP IP address provided is valid
                 p = Popen("navicli -h %s getsptime" % (ans,), shell=True, stdout=PIPE, stderr=PIPE)
                 out, err = p.communicate()
diff --git a/sos/policies/__init__.py b/sos/policies/__init__.py
index c272e5c..5715113 100644
--- a/sos/policies/__init__.py
+++ b/sos/policies/__init__.py
@@ -18,6 +18,7 @@ from sos import _sos as _
 import hashlib
 from textwrap import fill
 from six import print_
+from six.moves import input
 
 def import_policy(name):
     policy_fqname = "sos.policies.%s" % name
@@ -383,9 +384,9 @@ class LinuxPolicy(Policy):
 
         if not self.commons['cmdlineopts'].batch and not self.commons['cmdlineopts'].quiet:
             try:
-                self.report_name = raw_input(_("Please enter your first initial and last name [%s]: ") % localname)
+                self.report_name = input(_("Please enter your first initial and last name [%s]: ") % localname)
 
-                self.ticket_number = raw_input(_("Please enter the case number that you are generating this report for: "))
+                self.ticket_number = input(_("Please enter the case number that you are generating this report for: "))
                 self._print()
             except:
                 self._print()
@@ -406,6 +407,6 @@ class LinuxPolicy(Policy):
 
         if (self.report_name == ""):
             self.report_name = "default"
-        
+
         return
 
diff --git a/sos/sosreport.py b/sos/sosreport.py
index 4b52572..073b28a 100644
--- a/sos/sosreport.py
+++ b/sos/sosreport.py
@@ -53,7 +53,7 @@ from sos.reporting import Report, Section, Command, CopiedFile, CreatedFile, Ale
 
 # PYCOMPAT
 import six
-from six.moves import zip
+from six.moves import zip, input
 if six.PY3:
     from configparser import ConfigParser
 else:
@@ -923,7 +923,7 @@ class SoSReport(object):
             msg = self.policy.get_msg()
             msg += _("Press ENTER to continue, or CTRL-C to quit.\n")
             try:
-                raw_input(msg)
+                input(msg)
             except:
                 self.ui_log.info("")
                 self._exit()
