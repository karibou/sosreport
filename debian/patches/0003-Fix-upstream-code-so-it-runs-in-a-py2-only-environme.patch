From 7f71ff6e56551b6042da61c5b17f011bafa40c00 Mon Sep 17 00:00:00 2001
From: Louis Bouchard <louis.bouchard@canonical.com>
Date: Mon, 29 Sep 2014 10:48:47 +0200
Subject: Fix upstream code so it runs in a py2 only environment

Signed-off-by: Louis Bouchard <louis.bouchard@canonical.com>
---
 sos/sosreport.py      | 4 ++++
 tests/plugin_tests.py | 4 ++--
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/sos/sosreport.py b/sos/sosreport.py
index 99b5f47..241f3c2 100644
--- a/sos/sosreport.py
+++ b/sos/sosreport.py
@@ -49,6 +49,10 @@ if six.PY3:
 else:
     from ConfigParser import ConfigParser
 from six import print_
+try:
+    input = raw_input
+except NameError:
+    pass
 
 # file system errors that should terminate a run
 fatal_fs_errors = (errno.ENOSPC, errno.EROFS)
diff --git a/tests/plugin_tests.py b/tests/plugin_tests.py
index 817e4f2..8e6352d 100644
--- a/tests/plugin_tests.py
+++ b/tests/plugin_tests.py
@@ -96,13 +96,13 @@ class PluginToolTests(unittest.TestCase):
 
     def test_regex_findall(self):
         test_s = "\n".join(['this is only a test', 'there are only two lines'])
-        test_fo = StringIO(test_s)
+        test_fo = StringIO(six.u(test_s))
         matches = regex_findall(r".*lines$", test_fo)
         self.assertEquals(matches, ['there are only two lines'])
 
     def test_regex_findall_miss(self):
         test_s = "\n".join(['this is only a test', 'there are only two lines'])
-        test_fo = StringIO(test_s)
+        test_fo = StringIO(six.u(test_s))
         matches = regex_findall(r".*not_there$", test_fo)
         self.assertEquals(matches, [])
 
