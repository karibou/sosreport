From 9c26dba787a79918ccfcd5ad4158110e8dfd66d9 Mon Sep 17 00:00:00 2001
From: Louis Bouchard <louis.bouchard@canonical.com>
Date: Wed, 27 Aug 2014 16:07:39 +0200
Subject: fix pysix issue for precise

Some of the pysix functionalities expected are not available
in precise. Fix accordingly so it builds correctly

Signed-off-by: Louis Bouchard <louis.bouchard@canonical.com>
---
 sos/plugins/emc.py       | 2 +-
 sos/policies/__init__.py | 9 +++++++--
 sos/sosreport.py         | 2 +-
 tests/archive_tests.py   | 2 +-
 tests/plugin_tests.py    | 8 +++++---
 5 files changed, 15 insertions(+), 8 deletions(-)

diff --git a/sos/plugins/emc.py b/sos/plugins/emc.py
index 6eac7d0..fa58cfc 100644
--- a/sos/plugins/emc.py
+++ b/sos/plugins/emc.py
@@ -194,7 +194,7 @@ class Emc(Plugin, RedHatPlugin):
             CLARiiON_IP_address_list = []
             CLARiiON_IP_loop = "stay_in"
             while CLARiiON_IP_loop == "stay_in":
-                ans = raw_input("CLARiiON SP IP Address or [Enter] to exit: ")
+                ans = input("CLARiiON SP IP Address or [Enter] to exit: ")
                 ## Check to make sure the CLARiiON SP IP address provided is valid
                 p = Popen("navicli -h %s getsptime" % (ans,), shell=True, stdout=PIPE, stderr=PIPE)
                 out, err = p.communicate()
diff --git a/sos/policies/__init__.py b/sos/policies/__init__.py
index c272e5c..f1bd258 100644
--- a/sos/policies/__init__.py
+++ b/sos/policies/__init__.py
@@ -18,6 +18,11 @@ from sos import _sos as _
 import hashlib
 from textwrap import fill
 from six import print_
+try:
+    input = raw_input
+except NameError:
+    pass
+
 
 def import_policy(name):
     policy_fqname = "sos.policies.%s" % name
@@ -383,9 +388,9 @@ class LinuxPolicy(Policy):
 
         if not self.commons['cmdlineopts'].batch and not self.commons['cmdlineopts'].quiet:
             try:
-                self.report_name = raw_input(_("Please enter your first initial and last name [%s]: ") % localname)
+                self.report_name = input(_("Please enter your first initial and last name [%s]: ") % localname)
 
-                self.ticket_number = raw_input(_("Please enter the case number that you are generating this report for: "))
+                self.ticket_number = input(_("Please enter the case number that you are generating this report for: "))
                 self._print()
             except:
                 self._print()
diff --git a/sos/sosreport.py b/sos/sosreport.py
index 0faa364..cd5e3f5 100644
--- a/sos/sosreport.py
+++ b/sos/sosreport.py
@@ -924,7 +924,7 @@ class SoSReport(object):
             msg = self.policy.get_msg()
             msg += _("Press ENTER to continue, or CTRL-C to quit.\n")
             try:
-                raw_input(msg)
+                input(msg)
             except:
                 self.ui_log.info("")
                 self._exit()
diff --git a/tests/archive_tests.py b/tests/archive_tests.py
index 9cd7bd1..406bc1b 100644
--- a/tests/archive_tests.py
+++ b/tests/archive_tests.py
@@ -35,7 +35,7 @@ class ZipFileArchiveTest(unittest.TestCase):
         self.check_for_file('tests/ziptest')
 
     def test_add_unicode_file(self):
-        self.zf.add_file(u'tests/')
+        self.zf.add_file(six.u('tests/'))
         self.zf.close()
 
         self.check_for_file('tests/ziptest')
diff --git a/tests/plugin_tests.py b/tests/plugin_tests.py
index c4b540f..c6f7ccf 100644
--- a/tests/plugin_tests.py
+++ b/tests/plugin_tests.py
@@ -4,9 +4,11 @@ import tempfile
 
 # PYCOMPAT
 import six
-if six.PY2:
-    from StringIO import StringIO
-else:
+
+try:
+    if six.PY2:
+        from StringIO import StringIO
+except AttributeError:
     from io import StringIO
 
 from sos.plugins import Plugin, regex_findall, sos_relative_path, mangle_command
